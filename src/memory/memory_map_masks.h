#pragma once

namespace festation
{
    static constexpr const uint32_t PHYSICAL_MEMORY_MASK = 0x1FFFFFFF; // 0.5GB per region in MIPS 32 bits

    enum MemoryMapRangesSize        
    {
        MAIN_RAM_SIZE = 0x1FFFFF,            // 2MB
        MAIN_RAM_EXTENDED_SIZE = 0x7FFFFF,  // 8MB (mirrors every 2MB)
        EXPANSION_REGION1_SIZE = 0x7FFFFF,  // 8MB
        SCRATCHPAD_SIZE = 0x3FF,            // 1KB
        IO_PORTS_SIZE = 0xFFF,              // 4KB
        EXPANSION_REGION2_SIZE = 0x1FFF,    // 8KB
        EXPANSION_REGION3_SIZE = 0x1FFFFF,  // 2MB
        BIOS_ROM_SIZE = 0x7FFFF,            // 512KB
        CACHE_CONTROL_SIZE = 0x1FF               // 0.5KB
    };

    enum MemoryMapRegions
    {
        MAIN_RAM_START = 0x00000000,
        MAIN_RAM_END = MAIN_RAM_START + MAIN_RAM_EXTENDED_SIZE,
        EXPANSION_REGION1_START = 0x1F000000,
        EXPANSION_REGION1_END = EXPANSION_REGION1_START + EXPANSION_REGION1_SIZE,
        SCRATCHPAD_START = 0x1F800000,
        SCRATCHPAD_END = SCRATCHPAD_START + SCRATCHPAD_SIZE,
        IO_PORTS_START = 0x1F801000,
        IO_PORTS_END = IO_PORTS_START + IO_PORTS_SIZE,
        EXPANSION_REGION2_START = 0x1F802000,
        EXPANSION_REGION2_END = EXPANSION_REGION2_START + EXPANSION_REGION2_SIZE,
        EXPANSION_REGION3_START = 0x1FA00000,
        EXPANSION_REGION3_END = EXPANSION_REGION3_START + EXPANSION_REGION3_SIZE,
        BIOS_ROM_START = 0x1FC00000,
        BIOS_ROM_END = BIOS_ROM_START + BIOS_ROM_SIZE,
        CACHE_CONTROL_START = 0xFFFE0000,
        CACHE_CONTROL_END = CACHE_CONTROL_START + CACHE_CONTROL_SIZE
    };
};